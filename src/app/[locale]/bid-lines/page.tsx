import { useTranslation } from '@/lib/i18n';
import BidLinesClient from './BidLinesClient';

export default async function BidLinesPage({
  params,
}: {
  params: Promise<{ locale: string }>;
}) {
  const { locale } = await params;
  const { t } = useTranslation(locale);

  // Pre-translate strings for client component
  const translations = {
    // Header translations
    appTitle: t('app.title'),
    navHome: t('nav.home'),
    navAdmin: t('nav.admin'),
    navLogin: t('nav.login'),
    navLogout: t('nav.logout'),
    // Page translations
    navBidLines: t('nav.bidLines'),
    appDescription: t('app.description'),
    operationsTitle: t('operations.title') || 'Operation',
    commonAll: t('common.all'),
    bidLineSearch: t('bidLine.search'),
    showAvailable: t('bidLine.showAvailable'),
    showFavorites: t('bidLine.showFavorites'),
    commonLive: t('common.live'),
    noData: t('messages.noData'),
    // BidLineCard translations
    favoriteRemoved: t('messages.favoriteRemoved'),
    favoriteAdded: t('messages.favoriteAdded'),
    changesError: t('messages.changesError'),
    lineClaimedSuccess: t('messages.lineClaimedSuccess'),
    lineClaimedError: t('messages.lineClaimedError'),
    bidLineNumber: t('bidLine.lineNumber'),
    bidLineClaim: t('bidLine.claim'),
    // Status translations
    bidLineAvailable: t('bidLine.available'),
    bidLineTaken: t('bidLine.taken'),
    bidLineBlackedOut: t('bidLine.blackedOut'),
    // Days translations
    daysMon: t('days.mon'),
    daysTue: t('days.tue'),
    daysWed: t('days.wed'),
    daysThu: t('days.thu'),
    daysFri: t('days.fri'),
    daysSat: t('days.sat'),
    daysSun: t('days.sun'),
    // New translation groups for structured access
    bidLine: {
      expandAll: t('bidLine.expandAll'),
      collapseAll: t('bidLine.collapseAll'),
      searchLines: t('bidLine.searchLines'),
      searchPlaceholder: t('bidLine.searchPlaceholder'),
      found: t('bidLine.found'),
      of: t('bidLine.of'),
      lines: t('bidLine.lines'),
      noMatches: t('bidLine.noMatches'),
      operations: t('bidLine.operations'),
      total: t('bidLine.total'),
    },
    scheduleMetrics: {
      title: t('scheduleMetrics.title'),
      weekendsWorking: t('scheduleMetrics.weekendsWorking'),
      saturdays: t('scheduleMetrics.saturdays'),
      sundays: t('scheduleMetrics.sundays'),
      fiveDayBlocks: t('scheduleMetrics.fiveDayBlocks'),
      fourDayBlocks: t('scheduleMetrics.fourDayBlocks'),
      holidays: t('scheduleMetrics.holidays'),
      available: t('scheduleMetrics.available'),
      assigned: t('scheduleMetrics.assigned'),
      blackedOut: t('scheduleMetrics.blackedOut'),
      allStatus: t('scheduleMetrics.allStatus'),
      status: t('scheduleMetrics.status'),
      // Modal specific translations
      whatThisMeans: t('scheduleMetrics.whatThisMeans'),
      whyItMatters: t('scheduleMetrics.whyItMatters'),
      completeScheduleSummary: t('scheduleMetrics.completeScheduleSummary'),
      close: t('common.close'),
      // Descriptions
      weekendsDescription: t('scheduleMetrics.weekendsDescription'),
      saturdaysDescription: t('scheduleMetrics.saturdaysDescription'),
      sundaysDescription: t('scheduleMetrics.sundaysDescription'),
      fiveDayBlocksDescription: t('scheduleMetrics.fiveDayBlocksDescription'),
      fourDayBlocksDescription: t('scheduleMetrics.fourDayBlocksDescription'),
      holidaysDescription: t('scheduleMetrics.holidaysDescription'),
      // Explanations
      weekendsExplanation: t('scheduleMetrics.weekendsExplanation'),
      saturdaysExplanation: t('scheduleMetrics.saturdaysExplanation'),
      sundaysExplanation: t('scheduleMetrics.sundaysExplanation'),
      fiveDayBlocksExplanation: t('scheduleMetrics.fiveDayBlocksExplanation'),
      fourDayBlocksExplanation: t('scheduleMetrics.fourDayBlocksExplanation'),
      holidaysExplanation: t('scheduleMetrics.holidaysExplanation'),
      // Holiday modal specific translations
      holidaysWorking: t('scheduleMetrics.holidaysWorking'),
      holidaysOff: t('scheduleMetrics.holidaysOff'),
      workingShift: t('scheduleMetrics.workingShift'),
      dayOff: t('scheduleMetrics.dayOff'),
      // Weekend and weekday modal specific translations
      totalSaturdaysTitle: t('scheduleMetrics.totalSaturdaysTitle'),
      totalSaturdaysDescription: t('scheduleMetrics.totalSaturdaysDescription'),
      totalSaturdaysExplanation: t('scheduleMetrics.totalSaturdaysExplanation'),
      totalSundaysTitle: t('scheduleMetrics.totalSundaysTitle'),
      totalSundaysDescription: t('scheduleMetrics.totalSundaysDescription'),
      totalSundaysExplanation: t('scheduleMetrics.totalSundaysExplanation'),
      totalMondaysTitle: t('scheduleMetrics.totalMondaysTitle'),
      totalMondaysDescription: t('scheduleMetrics.totalMondaysDescription'),
      totalMondaysExplanation: t('scheduleMetrics.totalMondaysExplanation'),
      totalTuesdaysTitle: t('scheduleMetrics.totalTuesdaysTitle'),
      totalTuesdaysDescription: t('scheduleMetrics.totalTuesdaysDescription'),
      totalTuesdaysExplanation: t('scheduleMetrics.totalTuesdaysExplanation'),
      totalWednesdaysTitle: t('scheduleMetrics.totalWednesdaysTitle'),
      totalWednesdaysDescription: t('scheduleMetrics.totalWednesdaysDescription'),
      totalWednesdaysExplanation: t('scheduleMetrics.totalWednesdaysExplanation'),
      totalThursdaysTitle: t('scheduleMetrics.totalThursdaysTitle'),
      totalThursdaysDescription: t('scheduleMetrics.totalThursdaysDescription'),
      totalThursdaysExplanation: t('scheduleMetrics.totalThursdaysExplanation'),
      totalFridaysTitle: t('scheduleMetrics.totalFridaysTitle'),
      totalFridaysDescription: t('scheduleMetrics.totalFridaysDescription'),
      totalFridaysExplanation: t('scheduleMetrics.totalFridaysExplanation'),
      of: t('scheduleMetrics.of'),
      bidLineNumber: t('scheduleMetrics.bidLineNumber'),
      viewAllMetrics: t('scheduleMetrics.viewAllMetrics'),
      allMetricsTitle: t('scheduleMetrics.allMetricsTitle'),
      weekendMetrics: t('scheduleMetrics.weekendMetrics'),
      weekdayBreakdown: t('scheduleMetrics.weekdayBreakdown'),
      workBlocks: t('scheduleMetrics.workBlocks'),
      specialPatterns: t('scheduleMetrics.specialPatterns'),
      holidayInfo: t('scheduleMetrics.holidayInfo'),
      summaryStats: t('scheduleMetrics.summaryStats'),
      // Off-day block translations
      offBlocks2day: t('scheduleMetrics.offBlocks2day'),
      offBlocks3day: t('scheduleMetrics.offBlocks3day'),
      offBlocks4day: t('scheduleMetrics.offBlocks4day'),
      offBlocks5day: t('scheduleMetrics.offBlocks5day'),
      offBlocks6day: t('scheduleMetrics.offBlocks6day'),
      offBlocks7dayPlus: t('scheduleMetrics.offBlocks7dayPlus'),
      longestOffStretch: t('scheduleMetrics.longestOffStretch'),
      shortestOffStretch: t('scheduleMetrics.shortestOffStretch'),
      // Off-day block titles
      offBlocks2dayTitle: t('scheduleMetrics.offBlocks2dayTitle'),
      offBlocks3dayTitle: t('scheduleMetrics.offBlocks3dayTitle'),
      offBlocks4dayTitle: t('scheduleMetrics.offBlocks4dayTitle'),
      offBlocks5dayTitle: t('scheduleMetrics.offBlocks5dayTitle'),
      offBlocks6dayTitle: t('scheduleMetrics.offBlocks6dayTitle'),
      offBlocks7dayPlusTitle: t('scheduleMetrics.offBlocks7dayPlusTitle'),
      longestOffStretchTitle: t('scheduleMetrics.longestOffStretchTitle'),
      shortestOffStretchTitle: t('scheduleMetrics.shortestOffStretchTitle'),
      // Off-day block descriptions
      offBlocks2dayDescription: t('scheduleMetrics.offBlocks2dayDescription'),
      offBlocks3dayDescription: t('scheduleMetrics.offBlocks3dayDescription'),
      offBlocks4dayDescription: t('scheduleMetrics.offBlocks4dayDescription'),
      offBlocks5dayDescription: t('scheduleMetrics.offBlocks5dayDescription'),
      offBlocks6dayDescription: t('scheduleMetrics.offBlocks6dayDescription'),
      offBlocks7dayPlusDescription: t('scheduleMetrics.offBlocks7dayPlusDescription'),
      longestOffStretchDescription: t('scheduleMetrics.longestOffStretchDescription'),
      shortestOffStretchDescription: t('scheduleMetrics.shortestOffStretchDescription'),
      // Off-day block explanations
      offBlocks2dayExplanation: t('scheduleMetrics.offBlocks2dayExplanation'),
      offBlocks3dayExplanation: t('scheduleMetrics.offBlocks3dayExplanation'),
      offBlocks4dayExplanation: t('scheduleMetrics.offBlocks4dayExplanation'),
      offBlocks5dayExplanation: t('scheduleMetrics.offBlocks5dayExplanation'),
      offBlocks6dayExplanation: t('scheduleMetrics.offBlocks6dayExplanation'),
      offBlocks7dayPlusExplanation: t('scheduleMetrics.offBlocks7dayPlusExplanation'),
      longestOffStretchExplanation: t('scheduleMetrics.longestOffStretchExplanation'),
      shortestOffStretchExplanation: t('scheduleMetrics.shortestOffStretchExplanation'),
    },
    common: {
      save: t('common.save'),
      clear: t('common.clear'),
    },
    // Day-off requests translations  
    dayOffRequests: {
      title: t('dayOffRequests.title'),
      description: t('dayOffRequests.description'),
      selectDates: t('dayOffRequests.selectDates'),
      notes: t('dayOffRequests.notes'),
      notesPlaceholder: t('dayOffRequests.notesPlaceholder'),
      saving: t('dayOffRequests.saving'),
      saved: t('dayOffRequests.saved'),
      cleared: t('dayOffRequests.cleared'),
      error: t('dayOffRequests.error'),
    },
    // Day-off match modal translations
    dayOffMatch: {
      title: t('dayOffMatch.title'),
      matchWith: t('dayOffMatch.matchWith'),
      totalRequested: t('dayOffMatch.totalRequested'),
      daysOffMatch: t('dayOffMatch.daysOffMatch'),
      conflicts: t('dayOffMatch.conflicts'),
      conflictingDays: t('dayOffMatch.conflictingDays'),
      matchingDays: t('dayOffMatch.matchingDays'),
      conflictDescription: t('dayOffMatch.conflictDescription'),
      matchDescription: t('dayOffMatch.matchDescription'),
      allPreserved: t('dayOffMatch.allPreserved'),
      infoNote: t('dayOffMatch.infoNote'),
      close: t('dayOffMatch.close'),
    },
    filterTooltips: {
      anyMode: 'Show lines with at least one selected category',
      anyModeFr: 'Afficher les lignes avec au moins une catégorie sélectionnée',
      exactMode: 'Show lines with all selected categories',
      exactModeFr: 'Afficher les lignes avec toutes les catégories sélectionnées',
    },
  };

  return <BidLinesClient locale={locale} translations={translations} />;
}